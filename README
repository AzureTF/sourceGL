********************************************************************************
 sourceGL is now sourceGameLounge
********************************************************************************

  Along with the renaming, sourceGameLounge will now be open-source. It will
  continue to be free. It has been completely rewritten from the ground up in a
  different programming language, so it will likely not be released as an
  update to sourceGL--meaning that it will not carry over sourceGL's settings.
  Other design plans for the new code are to make the releases portable and to
  utilize a plugin design to handle most of the program functionality, except
  the most basic core functions.

  The plugin system design means that unused or unwanted dynamic-link libraries
  can be not loaded or deleted to save drive space and reduce the memory
  footprint. Third-party plugins can be developed to make sourceGameLounge do
  practically anything you'd want. There will be several officially maintained
  plugins covering the most popular features that will be distributed with the
  main program.


********************************************************************************
 Versioning
********************************************************************************

  I'm attempting to use separate semantic versioning (http://semver.org/) for
  the main program and for each plugin, to make it more clear where the updates
  are occurring. I am currently very early in the initial development phase, so
  the versioning will be changing very rapidly and is somewhat arbitrary.
  Versioning has been reset and is not congruent with sourceGL versions.
  
  Current versions of the main program and the plugins that have been at least
  partially implemented thus far:
    - sourceGameLounge 0.2.6
    - NVIDIA plugin 0.1.3
    - Rinput-Library submodule 1.45.0


********************************************************************************
 Repository structure
********************************************************************************

  - The statically loaded program modules are in the root directory
  - The plugin system is a separate DLL project in the commonDLL folder
  - Plugins are separate DLL projects, each in their own folder within the
    plugins folder
  - My fork from about/Rinput-Library has been included as a submodule, as the
    RInputInjector plugin will dynamically load the submodules's runtime file
  - A 'template' plugin project is in the plugin folder, to serve as a blank
    guide for demonstrating the requirements for coding a third-party plugin
  - Files to generate/modify the GUI are provided, including the images folder
  - The project files will automically copy the build's runtime files into the
    program-dir folder, which includes all the other files to make the contents
    of that folder equivalent to a portable release.


********************************************************************************
 Utilized build tools
********************************************************************************

  - Microsoft Visual Studio Community 2013
      - http://go.microsoft.com/fwlink/?LinkId=517284
  - Qt Open Source 5.7.0 for VS 2013
      - http://qt.io/download-open-source/#section-2
  - Visual Studio Add-in 1.2.5 for Qt5
      - http://download.qt.io/official_releases/vsaddin/qt-vs-addin-1.2.5.exe
  - Boost Version 1.62.0
      - http://boost.org/users/history/version_1_62_0.html


********************************************************************************
 Build notes
********************************************************************************

  - BOOSTDIR needs to be defined as a macro in VS 2013 in order for the project
    additional include/library directories to work as-is, for example with the
    default install folder: $(BOOSTDIR) = C:\Program Files\boost\boost_1_62_0
  - QTDIR may need to be user defined as a macro, but the Qt Add-in should do
    this, with the default install folder: $(QTDIR) = C:\Qt\Qt5.7.0\5.7\msvc2013
  - Information on how to define macros in VS 2013: http://bit.ly/2fpK6P2
  - Currently, everything is half-implemented, at best. Commenting is also very
    poor right now and there is a lot of placeholder code that I've just been 
    using to test basic functionality.


********************************************************************************
 ...more to come, this README is a very basic placeholder for now.
********************************************************************************